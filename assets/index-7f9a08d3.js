import{P as z,S as E,B as X,a as x,b as B,C as M,c as H,W as L}from"./three.module-f9807762.js";import{d as R,r as Y,m as j,o as k,n as F,a as N,c as U}from"./index-001d42e8.js";const $=R({__name:"index",props:{amountX:{type:Number,default:150},amountY:{type:Number,default:100},color:{type:String,default:"#097bdb"},top:{type:Number,default:0}},setup(A){const t=A,m=100,w=Y("hsl(75,100%, 50%)");let i,n,p,r,a,c=0,h=0,y=window.innerWidth/2;function C(){i=document.getElementById("wave"),n=new z(75,window.innerWidth/window.innerHeight,1,1e4),n.position.z=550,p=new E;const e=t.amountX*t.amountY,s=new Float32Array(e*3),u=new Float32Array(e);let l=0,d=0;for(let f=0;f<t.amountX;f++)for(let v=0;v<t.amountY;v++)s[l]=f*m-t.amountX*m/2,s[l+1]=0,s[l+2]=v*m-t.amountY*m/2,u[d]=1,l+=3,d++;const o=new X;o.setAttribute("position",new x(s,3)),o.setAttribute("scale",new x(u,1));const W=new B({uniforms:{color:{value:new M(w.value)}},vertexShader:"attribute float scale; void main() {vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );gl_PointSize = scale * ( 300.0 / - mvPosition.z );gl_Position = projectionMatrix * mvPosition;}",fragmentShader:"uniform vec3 color;void main() {if ( length( gl_PointCoord - vec2( 0.5, 0.5 ) ) > 0.475 ) discard;gl_FragColor = vec4( color, 1.0 );}"});a=new H(o,W),p.add(a),r=new L({antialias:!0,alpha:!0}),r.setPixelRatio(window.devicePixelRatio),r.setClearAlpha(0),r.setSize(window.innerWidth,window.innerHeight),i.appendChild(r.domElement),i.style.touchAction="none",i.addEventListener("pointermove",P),i.style.position="relative",i.style.top=`${t.top}px`,window.addEventListener("resize",g)}function S(){n.position.x+=(h-n.position.x)*.05,n.position.y=400,n.lookAt(p.position);const e=a.geometry.attributes.position.array,s=a.geometry.attributes.scale.array;let u=0,l=0;for(let d=0;d<t.amountX;d++)for(let o=0;o<t.amountY;o++)e[u+1]=Math.sin((d+c)*.3)*50+Math.sin((o+c)*.5)*50,s[l]=(Math.sin((d+c)*.3)+1)*10+(Math.sin((o+c)*.5)+1)*10,u+=3,l++;a.geometry.attributes.position.needsUpdate=!0,a.geometry.attributes.scale.needsUpdate=!0,r.render(p,n),c+=.1}function g(){y=window.innerWidth/2,n.aspect=window.innerWidth/window.innerHeight,n.updateProjectionMatrix(),r.setSize(window.innerWidth,window.innerHeight)}function P(e){e.isPrimary!==!1&&(h=e.clientX-y)}function b(){requestAnimationFrame(b),S()}function _(){const e=Math.floor(Math.random()*360);w.value=`hsl(${e}, 100%, 50%)`}return j(w,()=>{a.material.uniforms.color.value=new M(w.value)}),k(()=>{C(),b()}),F(()=>{i.removeEventListener("pointermove",P),window.removeEventListener("resize",g)}),(e,s)=>(N(),U("div",{id:"wave",onClick:_}))}});export{$ as default};
